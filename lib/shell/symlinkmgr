#!/usr/bin/env sh

# Simple lib script for managing symbolic links by defining a core set of
# functions that can be used by other scripts

# The following variables must be defined in order to use this functions...
#   - SYM_SOURCE_DIR
#   - SYM_TARGET_FILE

# List available targets from the source directory
list_targets() {
    ls ${SYM_SOURCE_DIR}
}

set_target() {
    target=$1
    if [ ! -f $SYM_SOURCE_DIR/$target ]; then
        echo "Invalid target selection: $target";
        exit 1
    fi
    echo "Attempting to set target: $target"

    sym_target_dir=$(dirname $SYM_TARGET_FILE)
    [ ! -d $sym_target_dir ] && mkdir -p $sym_target_dir
    [ -f $SYM_TARGET_FILE ] && rm $SYM_TARGET_FILE
    ln -s "$SYM_SOURCE_DIR/$target" "$SYM_TARGET_FILE"
}

# This function is meant to rotate the symlink to the next available target
cycle_link() {
    action=$1
    current=$(basename $(realpath $SYM_TARGET_FILE))
    if [ -z "$DISABLE_SYM_LINK_CYCLE" ]; then

        # Compute the update value
        updater=0
        if [ "prev" = "$action" ]; then
            updater=-1
        elif [ "next" = "$action" ]; then
            updater=1
        else
            echo "Internal Error, Invalid argument!"
            exit 1
        fi

        # Find current symlink item number
        max_lines=$(list_targets | wc -l)
        curr_id=$(list_targets | grep -n "${current}$" | sed -e 's/:.*//g')
        new_id=$(($curr_id + $updater))

        # Fix overflows
        if [ $new_id -lt 1 ]; then
            new_id=$max_lines
        elif [ $new_id -gt $max_lines ]; then
            new_id=1
        fi

        new_target=$(list_targets | sed -n ${new_id}p)
        set_target $new_target
    fi
}

default_action() {
    echo "Dummy function for default action"
}

# Main function that you need to call
symlinkmgr() {
    if [ -z "$@" ]; then
        default_action
    elif [ "$1" = "--list" ]; then
        list_targets
    elif [ "$1" = "--set" ]; then
        shift && set_target $@
    elif [ "$1" = "--next" ]; then
        cycle_link next
    elif [ "$1" = "--prev" ]; then
        cycle_link prev
    fi
}
