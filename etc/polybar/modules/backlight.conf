; ____             _    _ _       _     _     __  __           _       _
;| __ )  __ _  ___| | _| (_) __ _| |__ | |_  |  \/  | ___   __| |_   _| | ___
;|  _ \ / _` |/ __| |/ / | |/ _` | '_ \| __| | |\/| |/ _ \ / _` | | | | |/ _ \
;| |_) | (_| | (__|   <| | | (_| | | | | |_  | |  | | (_) | (_| | |_| | |  __/
;|____/ \__,_|\___|_|\_\_|_|\__, |_| |_|\__| |_|  |_|\___/ \__,_|\__,_|_|\___|
;                           |___/

type = internal/xbacklight

; XRandR output to get get values from
; Default: the monitor defined for the running bar
;output =

; Create scroll handlers used to set the backlight value
; Default: true
enable-scroll = false

; Available tags:
;   <label> (default)
;   <ramp>
;   <bar>
format = bL: <label>
format-background = ${colors.background}
format-foreground = ${colors.green}
format-padding = 2

; Available tokens:
;   %percentage% (default)
label = %percentage%%
label-foreground = ${colors.green}

; Only applies if <ramp> is used
ramp-0 = ðŸŒ•
ramp-1 = ðŸŒ”
ramp-2 = ðŸŒ“
ramp-3 = ðŸŒ’
ramp-4 = ðŸŒ‘

; Only applies if <bar> is used
bar-width = 10
bar-indicator = |
bar-fill = â”€
bar-empty = â”€

; vim:ft=dosini
