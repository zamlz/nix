#!/bin/zsh

# Try using pipenv as much as possible instead of these o_O

export PYTHON_VENVS_DIR="${HOME}/.local/share/python-venvs"
if [ -d "${PYTHON_VENVS_DIR}" ]; then
    mkdir -p "${PYTHON_VENVS_DIR}"
fi

# There may be a better solution to this, but I just like using the built in
# venv that is part of python3. But its a pain to write out every command
# so this does a lot of things.

if [[ -n "${@}" ]]; then

    vname=${1};
    python_binary=${2:-python3}

    if [ ! -d "${PYTHON_VENVS_DIR}/${vname}" ]; then

        echo "Create a new virtual environment named '${vname}' ?";
        echo 'Press any key to continue or Ctrl+C to exit...\n'

        # note this is zsh read
        read -k1 -rs
        echo "Creating new venv: ${vname}";

        which ${python_binary} > /dev/null 2>&1
        if [[ $? != 0 ]]; then
            echo "Unable to find binary: ${python_binary}"
            return
        fi
        echo "Using python binary: ${python_binary}"

        ${python_binary} -m venv --copies "${PYTHON_VENVS_DIR}/${vname}"

    fi
    echo "Starting venv: ${vname}"
    source "${PYTHON_VENVS_DIR}/${vname}/bin/activate"
    save_window_info
else
    echo "Python Virtual Environments (venvs)"
    tree -L 1 -d --noreport ${PYTHON_VENVS_DIR}/ | tail -n +2
fi
