:PROPERTIES:
:ID:       cc5f32f8-c334-448a-9970-08d037f2d83a
:ROAM_REFS: https://github.com/minad/vertico
:ROAM_ALIASES: vertico-mode
:END:
#+TITLE: Vertico
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+CREATED: [2021-05-18 Tue 19:38]
#+LAST_MODIFIED: [2021-10-11 Mon 00:00:23]
#+STARTUP: content
#+filetags: CONFIG SOFTWARE

* Vertical Interactive Completion
=vertico= is a minimal completion UI for [[id:cf447557-1f87-4a07-916a-160cfd2310cf][GNU/Emacs]]. It is built ontop of the regular completion system unlike other alternatives.

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-vertico.el :comments both :mkdirp yes
:END:
** Enable Dependencies

In order to make =vertico= completion a lot nicer that what it is, we make use of the [[id:6d690d97-0791-4225-bb3c-8b0deeb95045][Orderless]] package which enables orderless completion modes in various completion buffers.

#+begin_src emacs-lisp
(require 'init-orderless)
#+end_src

We also wan to have multiple minibuffers open, we can set this up with the [[id:555b3fa0-0b25-4694-a173-2c16046e3ca7][Recursion Indicator]] package so we know how many minibuffers are on the stack.

#+begin_src emacs-lisp
(require 'init-recursion-indicator)
#+end_src

** Package Install

Setup the =vertico= package.

#+begin_src emacs-lisp
(use-package vertico
  :bind (:map vertico-map
         ("?"   . minibuffer-completion-help)
         ("M-j" . vertico-next)
         ("M-k" . vertico-previous)
         ("M-f" . vertico-exit)
         :map minibuffer-local-map
         ;; See section below of directory movement
         ("S-<backspace>" . zamlz/minibuffer-backward-kill))
  :init
  (vertico-mode))
#+end_src

Allow =vertico= to cycle between results

#+begin_src emacs-lisp
(setq vertico-cycle t)
#+end_src

Let's also set the max size of =vertico= minibuffers.

#+begin_src emacs-lisp
(setq vertico-count 16)
#+end_src

But let's also make sure =vertico= is able to resize itself

#+begin_src emacs-lisp
(setq vertico-resize t)
#+end_src

** Persist History

Persist history over Emacs restarts. Vertico will sort by history position for all completion buffers.

#+begin_src emacs-lisp
(savehist-mode +1)
#+end_src

** Better Minibuffer Support

Resize the minibuffer on the fly as completion shrinks.

#+begin_src emacs-lisp
(setq resize-mini-windows t)
#+end_src

Do not allow the cursor in minibuffer prompts

#+begin_src emacs-lisp
(setq minibuffer-prompt-properties
      '(read-only t cursor-intangible t face minibuffer-prompt))
(add-hook 'minibuffer-setup-hook #'cursor-intangible-mode)
#+end_src

I actually I'm kinda unsure about the purpose of this block. I saw it in the original example for =vertico='s github page and copied it.

#+begin_src emacs-lisp
(defun crm-indicator (args)
  (cons (concat "[CRM] " (car args)) (cdr args)))
(advice-add #'completing-read-multiple :filter-args #'crm-indicator)
#+end_src

** Upwards Directory Movement in find-file

I stole this little snippet of code [[https://systemcrafters.cc/live-streams/may-21-2021/#going-up-a-directory-in-kbdfind-filekbd][from David (System Crafters)]].  It basically mimics the same behaviour that =counsel-find-file= has when using =<Backspace>=, that is, it would essentially delete the characters in the path string such that it would go up a directory. This does the same thing now, but in =vertico=.

#+begin_src emacs-lisp
(defun zamlz/minibuffer-backward-kill (arg)
  "When minibuffer is completing a file name delete up to parent
folder, otherwise delete a character backward"
  (interactive "p")
  (if minibuffer-completing-file-name
      ;; Borrowed from https://github.com/raxod502/selectrum/issues/498#issuecomment-803283608
      (if (string-match-p "/." (minibuffer-contents))
          (zap-up-to-char (- arg) ?/)
        (delete-minibuffer-contents))
      (delete-backward-char arg)))
#+end_src

** Feature Provide

#+begin_src emacs-lisp
(provide 'init-vertico)
#+end_src
