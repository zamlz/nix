:PROPERTIES:
:ID:       8061213e-6abf-4294-a357-ddba46d81a5e
:ROAM_REFS: https://github.com/abo-abo/hydra
:END:
#+TITLE: Hydra
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+CREATED: [2021-05-08 Sat 11:33]
#+LAST_MODIFIED: [2021-07-19 Mon 09:43:22]
#+filetags: CONFIG SOFTWARE

* Make Emacs Bindings that Stick Around

#+DOWNLOADED: screenshot @ 2021-05-08 11:41:25
[[file:data/hydra_and_hercules.png]]

#+begin_quote
*Hydra & Hercules* by Unknown

Once you summon the Hydra through the prefixed binding (the body + any one head), all heads can be called in succession with only a short extension.

The Hydra is vanquished once Hercules, any binding that isn't the Hydra's head, arrives. Note that Hercules, besides vanquishing the Hydra, will still serve his original purpose, calling his proper command. This makes the Hydra very seamless, it's like a minor mode that disables itself auto-magically.
#+end_quote

=hydra= is simply a package that provides lets us create configurable menus for quick access to commands for [[id:cf447557-1f87-4a07-916a-160cfd2310cf][GNU/Emacs]]

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-hydra.el :comments both :mkdirp yes
:END:

** Package Install

Load up the =hydra= package.

#+begin_src emacs-lisp
(use-package hydra)
#+end_src

** Text Scale Example Function

Here is a simple =hydra= function for scaling text.

#+begin_src emacs-lisp
(defhydra hydra-text-scale (:timeout 4)
  "scale text"
  ("j" text-scale-increase "in")
  ("k" text-scale-decrease "out")
  ("f" nil "finished" :exit t))
#+end_src

We can add this =hydra= function to our [[id:c4e4923e-2180-4a79-baf1-0dcf0f795c41][General Leader Keybindings Definer]] for easy access.

#+begin_src emacs-lisp
(require 'init-general)
(zamlz/leader-keys
  "ts" '(hydra-text-scale/body :which-key "scale text"))
#+end_src

** Feature Provider

Make sure to provide the feature.

#+begin_src emacs-lisp
(provide 'init-hydra)
#+end_src
