:PROPERTIES:
:ID:       397b3f52-7bc9-4d02-88fa-d7f0665fe556
:ROAM_REFS: https://gitlab.com/protesilaos/modus-themes/
:END:
#+TITLE: Modus Themes
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+CREATED: [2021-10-07 Thu 08:17]
#+LAST_MODIFIED: [2021-10-10 Sun 23:56:54]
#+FILETAGS: CONFIG SOFTWARE

* Highly Accessible Themes for GNU/Emacs

| Included Themes  |
|------------------|
| =modus-operandi= |
| =modus-vivendi=  |

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-modus-themes.el :comments both :mkdirp yes
:END:

** Package Install

#+begin_src emacs-lisp
(use-package modus-themes
  :bind ("<f5>" . modus-themes-toggle))
#+end_src

** Custom Parameters
All customizations for the modus themes must be applied before loading a theme /(see next section)/.

*** Inhibiting Theme Reload
The first option prevents theme relaoding to occur when using the =M-x customize-set-variable= method.

#+begin_src emacs-lisp
(setq modus-themes-inhibit-reload t)
#+end_src

*** Color-coding Success State (Deuteranopia)
The next option is for color-coding success state for people who had deuteranopia (also known as red-green color blindness).

#+begin_src emacs-lisp
(setq modus-themes-success-deuteranopia nil)
#+end_src

*** Option for more Italic/Bold Constructs
The next set of optinos cover adding /italics/ and *bold* constructs to code syntax.

#+begin_src emacs-lisp
(setq modus-themes-italic-constructs t)
(setq modus-themes-bold-constructs t)
#+end_src

*** Syntax Highlighting
Next we have the option to configure how the syntax would be highlighted. It can include any combination of the following symbols.

- =faint=
- =yellow-comments=
- =green-strings=
- =alt-syntax=

#+begin_src emacs-lisp
(setq modus-themes-syntax nil)
#+end_src

*** Font Mixing
Let =modus-themes= know that we are going to be having mixed fonts.

#+begin_src emacs-lisp
(setq modus-themes-mixed-fonts t)
#+end_src

*** Links
The links itself can be customized with the following parameters
- =neutral-underline= or =no-underline=
- =faint= or =no-color=
- =bold=
- =italic=
- =background=

#+begin_src emacs-lisp
(setq modus-themes-links '(no-underline background))
#+end_src

*** Command Prompt
The following can customzie the command prompt style.

#+begin_src emacs-lisp
(setq modus-themes-prompts '(background italic))
#+end_src

*** Modeline
We can also customize the theme of the modeline

#+begin_src emacs-lisp
(setq modus-themes-mode-line '(accented))
#+end_src

*** Tab Interface
We can also configure the accented background for tab interfaces. However I do not use any tab based interface as of yet.

#+begin_src emacs-lisp
(setq modus-themes-tabs-accented nil)
#+end_src

*** Completion Framework Aesthetics
We have a couple different ways to customize the completion framework UI.
- =nil=
- ='moderate=
- ='opinionated=

#+begin_src emacs-lisp
(setq modus-themes-completions nil)
#+end_src

*** Mail Citations
This is for mail stuff if I used [[id:b2439c8c-4eab-4fe5-91b3-12d77fdd5097][mu4e]]. I don't really use this yet.

#+begin_src emacs-lisp
(setq modus-themes-mail-citations nil)
#+end_src

*** Fringe Visibility
Available options for =modus-themes-fringes= is =nil=, ='subtle=, and ='intense=

#+begin_src emacs-lisp
(setq modus-themes-fringes nil)
#+end_src

*** Language Checkers
Options for =modus-themes-lang-checkers= are either =nil= (the default), or a list of properties that may include any of those symbols:
- =straight-underline=
- =text-also=
- =background=
- =intense= or =faint=

#+begin_src emacs-lisp
(setq modus-themes-lang-checkers nil)
#+end_src

*** Line Highlighting
Configures options for =hl-line-mode=. Possible values can be expressed as a list of the following properties:
- =accented=
- =intense=
- =underline=

#+begin_src emacs-lisp
(setq modus-themes-hl-line '(underline accented intense))
#+end_src

*** Line Numbers
This option only customized how subtle the line numbers look

#+begin_src emacs-lisp
(setq modus-themes-subtle-line-numbers t)
#+end_src

*** Markup in Org
Changes the style for certain markup types in inline code and vertbatim constructs in [[id:ef93dff4-b19f-4835-9002-9d4215f8a6fe][Org-mode]]. Note this is =verbatim= and this is ~code~.

#+begin_src emacs-lisp
(setq modus-themes-intense-markup t)
#+end_src

*** Parenthesis Matching
Control the aesthetic of the paren matching system. Possible values are:
- =bold=
- =intense=
- =underline=

#+begin_src emacs-lisp
(setq modus-themes-paren-match '(bold intense))
#+end_src

*** Active Region
This controls the color of the selected regoin (like in visual mode).
- =no-extend=
- =bg-only=
- =accented=

#+begin_src emacs-lisp
(setq modus-themes-region '(bg-only accented))
#+end_src

*** Diff Buffer Looks
Changes the look of the diff utility theme with the possible values:
- =nil=
- =desaturated=
- =bg-only=
- =deuteranopia=
- =fg-only-deuteranopia=

#+begin_src emacs-lisp
(setq modus-themes-diffs nil)
#+end_src

*** Org-mode Block Styles
- =nil=
- =gray-background=
- =tinted-background=

#+begin_src emacs-lisp
(setq modus-themes-org-blocks 'gray-background)
#+end_src

*** Org-agenda Constructs
There is a lot going on here. Read the documentation for more info.

#+begin_src emacs-lisp
(setq modus-themes-org-agenda nil)
#+end_src

*** Heading Style
Using a ~(heading-level . list-of-values)~ system, we can provide the following values for each of the headings:
- =rainbow=
- =overline=
- =background=
- =no-bold=
- =monochrome=

#+begin_src emacs-lisp
(setq modus-themes-headings
      '((t . (rainbow no-bold))))
#+end_src

*** Heading Scales

#+begin_src emacs-lisp
(setq modus-themes-scale-headings t)
(setq modus-themes-scale-1 1.05)
(setq modus-themes-scale-2 1.1)
(setq modus-themes-scale-3 1.15)
(setq modus-themes-scale-4 1.2)
(setq modus-themes-scale-title 1.3)
(setq modus-themes-scale-small 0.9)
#+end_src

*** Variable Pitch Headings

#+begin_src emacs-lisp
(setq modus-themes-variable-pitch-headings t)
#+end_src

*** Variable Pitch UI Elements

#+begin_src emacs-lisp
(setq modus-themes-variable-pitch-ui nil)
#+end_src

** Load Theme Files
The following will load and configure the =modus-themes=, this is not the same as enabling the theme!

#+begin_src emacs-lisp
(modus-themes-load-themes)
#+end_src

** Feature Provide

#+begin_src emacs-lisp
(provide 'init-modus-themes)
#+end_src
