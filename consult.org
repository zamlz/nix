:PROPERTIES:
:ID:       ff440da4-1dda-418e-a744-35f275902f65
:ROAM_REFS: https://github.com/minad/consult
:END:
#+TITLE: Consult
#+AUTHOR: Amlesh Sivanantham (zamlz)
#+CREATED: [2021-05-18 Tue 21:41]
#+LAST_MODIFIED: [2021-10-14 Thu 17:07:33]
#+STARTUP: content
#+FILETAGS: :config:emacs:

* Consulting Completing-Read
Provides various practical commands for completing-read. It essentially is meant to be used on top of completion systems like [[id:cc5f32f8-c334-448a-9970-08d037f2d83a][Vertico]].

* Configuration
:PROPERTIES:
:header-args:emacs-lisp: :tangle ~/.config/emacs/lisp/init-consult.el :comments both :mkdirp yes
:END:
** Package Install

Setup =consult=.

#+begin_src emacs-lisp
(use-package consult
  :bind (;; C-c bindings (mode-specific-map)
         ("C-c h" . consult-history)
         ("C-c m" . consult-mode-command)
         ("C-c b" . consult-bookmark)
         ("C-c k" . consult-kmacro)
         ;; C-x bindings (ctl-x-map)
         ("C-x M-:" . consult-complex-command)     ;; orig. repeat-complex-command
         ("C-x b" . consult-buffer)                ;; orig. switch-to-buffer
         ("C-x 4 b" . consult-buffer-other-window) ;; orig. switch-to-buffer-other-window
         ("C-x 5 b" . consult-buffer-other-frame)  ;; orig. switch-to-buffer-other-frame
         ;; Custom M-# bindings for fast register access
         ("M-#" . consult-register-load)
         ("M-'" . consult-register-store)          ;; orig. abbrev-prefix-mark (unrelated)
         ("C-M-#" . consult-register)
         ;; Other custom bindings
         ("M-y" . consult-yank-pop)                ;; orig. yank-pop
         ("<help> a" . consult-apropos)            ;; orig. apropos-command
         ;; M-g bindings (goto-map)
         ("M-g e" . consult-compile-error)
         ("M-g f" . consult-flymake)               ;; Alternative: consult-flycheck
         ("M-g g" . consult-goto-line)             ;; orig. goto-line
         ("M-g M-g" . consult-goto-line)           ;; orig. goto-line
         ("M-g o" . consult-outline)
         ("M-g m" . consult-mark)
         ("M-g k" . consult-global-mark)
         ("M-g i" . consult-imenu)
         ("M-g I" . consult-project-imenu)
         ;; M-s bindings (search-map)
         ("M-s f" . consult-find)
         ("M-s L" . consult-locate)
         ("M-s g" . consult-grep)
         ("M-s G" . consult-git-grep)
         ("M-s r" . consult-ripgrep)
         ("C-s" . consult-line)
         ("M-s m" . consult-multi-occur)
         ("M-s k" . consult-keep-lines)
         ("M-s u" . consult-focus-lines)
         ;; Isearch integration
         ("M-s e" . consult-isearch)
         :map isearch-mode-map
         ("M-e" . consult-isearch)                 ;; orig. isearch-edit-string
         ("M-s e" . consult-isearch)               ;; orig. isearch-edit-string
         ("M-s l" . consult-line)))                ;; required by consult-line to detect isearch
#+end_src

** Recent Files Sources

#+begin_src emacs-lisp
(recentf-mode +1)
#+end_src

** Project Sources

We want to be able to see project files in the =consult-buffer-*= views. But to get this to work, we need to register a project root function. We will get this from [[id:58c11446-80f2-439c-a8bf-7b22f709707c][Projectile]]. /(Make use of =autoload= to tell emacs that we will load this function at some point)/

#+begin_src emacs-lisp
(autoload 'projectile-project-root "projectile")
(setq consult-project-root-function #'projectile-project-root)
#+end_src

** Setup Keybindings

We make use of  [[id:c4e4923e-2180-4a79-baf1-0dcf0f795c41][General Leader Keybindings Definer]] to add all our =consult= functions.

#+begin_src emacs-lisp
(zamlz/leader-keys
 "tt" '(consult-theme :which-key "choose theme"))
#+end_src

** Feature Provide

#+begin_src emacs-lisp
(provide 'init-consult)
#+end_src
