#!/bin/zsh

# Get the logger
. $HOME/lib/shell/logging && eval "$(get_logger_no_stderr $0)"

logger "configure zsh interactive session options"
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt AUTO_CD
unsetopt BEEP

logger "setup vim bindings in zsh"
bindkey -v

logger "load various modules"
autoload -U compinit && compinit -d "$HOME/.local/share/zsh_compdump"
autoload -U bashcompinit && bashcompinit
#autoload -U colors && colors
autoload -U zcalc

logger "setup zsh plugins"
zsh_plugin_list=$(cat <<EOF
/usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
/usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
EOF
)
echo "$zsh_plugin_list" | while read -r zplugin; do
    logger "sourcing $zplugin"
    if [ -f $zplugin ]; then
        source $zplugin
        logger "success!"
    fi
done

# zsh-history-substring-search plugin post-install configuration
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

logger "sourcing shell aliases"
source $HOME/etc/zsh/aliases

logger "sourcing shell environment"
source $HOME/etc/zsh/env

logger "seting up shell prompt"
source $HOME/etc/zsh/prompt

logger "sourcing shell functions"
fpath=("$HOME/etc/zsh/functions" $fpath)
autoload venv

logger "sourcing machine specific environment"
if [ -f "$HOME/sys/path.sh" ]; then
    source $HOME/sys/path.sh
fi

# register hooks
precmd() {
    # Load terminal window info if it exists
    load_window_info > /dev/null
    # This must happen first so we can send in the exit code of the previous ran command
    export PROMPT=$(prompt_generate $?)
    # save terminal window info (creates id file)
    save_window_info > /dev/null
}
